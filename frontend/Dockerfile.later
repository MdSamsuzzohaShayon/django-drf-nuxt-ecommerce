# ---- Build Stage ----
FROM node:18-alpine AS build

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json before other files
# Utilize Docker cache to save re-installing dependencies if unchanged
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy all files
COPY . .

# Build app
RUN npm run build

# ---- Production Stage ----
FROM nginx:alpine

# Set working directory
WORKDIR /app

# Remove default nginx website
RUN rm -rf /usr/share/nginx/html/*

# Copy output directory from builder stage to nginx image
COPY --from=build /app/dist /usr/share/nginx/html

# Replace Nginx default configuration file with our custom one
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80